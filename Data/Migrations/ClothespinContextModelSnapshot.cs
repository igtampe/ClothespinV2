// <auto-generated />
using System;
using Clothespin2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Clothespin2.Data.Migrations
{
    [DbContext(typeof(ClothespinContext))]
    partial class ClothespinContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Clothespin2.Common.Clothes.Outfit", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("DressID")
                        .HasColumnType("uuid");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OwnerUsername")
                        .HasColumnType("text");

                    b.Property<Guid?>("PantsID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ShirtID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ShoesID")
                        .HasColumnType("uuid");

                    b.HasKey("ID");

                    b.HasIndex("DressID");

                    b.HasIndex("OwnerUsername");

                    b.HasIndex("PantsID");

                    b.HasIndex("ShirtID");

                    b.HasIndex("ShoesID");

                    b.ToTable("Outfit");
                });

            modelBuilder.Entity("Clothespin2.Common.Clothes.Wearable", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OwnerUsername")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("OwnerUsername");

                    b.ToTable("Wearable");
                });

            modelBuilder.Entity("Clothespin2.Common.Image", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte[]>("Data")
                        .HasColumnType("bytea");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("Clothespin2.Common.Tracking.LogItem", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DressID")
                        .HasColumnType("uuid");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("OutfitID")
                        .HasColumnType("uuid");

                    b.Property<string>("OwnerUsername")
                        .HasColumnType("text");

                    b.Property<Guid?>("PantsID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ShirtID")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ShoesID")
                        .HasColumnType("uuid");

                    b.HasKey("ID");

                    b.HasIndex("DressID");

                    b.HasIndex("OutfitID");

                    b.HasIndex("OwnerUsername");

                    b.HasIndex("PantsID");

                    b.HasIndex("ShirtID");

                    b.HasIndex("ShoesID");

                    b.ToTable("LogItem");
                });

            modelBuilder.Entity("Clothespin2.Common.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Username");

                    b.ToTable("User");
                });

            modelBuilder.Entity("OuterwearOutfit", b =>
                {
                    b.Property<Guid>("OuterwearLayersID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("OutfitsID")
                        .HasColumnType("uuid");

                    b.HasKey("OuterwearLayersID", "OutfitsID");

                    b.HasIndex("OutfitsID");

                    b.ToTable("OuterwearOutfit (Dictionary<string, object>)");
                });

            modelBuilder.Entity("Clothespin2.Common.Clothes.Items.Dress", b =>
                {
                    b.HasBaseType("Clothespin2.Common.Clothes.Wearable");

                    b.Property<int>("Distinguisher")
                        .HasColumnType("integer");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.ToTable("Dress");
                });

            modelBuilder.Entity("Clothespin2.Common.Clothes.Items.Outerwear", b =>
                {
                    b.HasBaseType("Clothespin2.Common.Clothes.Wearable");

                    b.Property<int>("Distinguisher")
                        .HasColumnType("integer");

                    b.Property<Guid?>("LogItemID")
                        .HasColumnType("uuid");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.HasIndex("LogItemID");

                    b.ToTable("Outerwear");
                });

            modelBuilder.Entity("Clothespin2.Common.Clothes.Items.Pants", b =>
                {
                    b.HasBaseType("Clothespin2.Common.Clothes.Wearable");

                    b.Property<int>("Distinguisher")
                        .HasColumnType("integer");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.ToTable("Pants");
                });

            modelBuilder.Entity("Clothespin2.Common.Clothes.Items.Shirt", b =>
                {
                    b.HasBaseType("Clothespin2.Common.Clothes.Wearable");

                    b.Property<int>("Distinguisher")
                        .HasColumnType("integer");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.ToTable("Shirt");
                });

            modelBuilder.Entity("Clothespin2.Common.Clothes.Items.Shoes", b =>
                {
                    b.HasBaseType("Clothespin2.Common.Clothes.Wearable");

                    b.Property<int>("Distinguisher")
                        .HasColumnType("integer");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("Shoes");
                });

            modelBuilder.Entity("Clothespin2.Common.Clothes.Outfit", b =>
                {
                    b.HasOne("Clothespin2.Common.Clothes.Items.Dress", "Dress")
                        .WithMany("Outfits")
                        .HasForeignKey("DressID");

                    b.HasOne("Clothespin2.Common.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerUsername");

                    b.HasOne("Clothespin2.Common.Clothes.Items.Pants", "Pants")
                        .WithMany("Outfits")
                        .HasForeignKey("PantsID");

                    b.HasOne("Clothespin2.Common.Clothes.Items.Shirt", "Shirt")
                        .WithMany("Outfits")
                        .HasForeignKey("ShirtID");

                    b.HasOne("Clothespin2.Common.Clothes.Items.Shoes", "Shoes")
                        .WithMany("Outfits")
                        .HasForeignKey("ShoesID");

                    b.Navigation("Dress");

                    b.Navigation("Owner");

                    b.Navigation("Pants");

                    b.Navigation("Shirt");

                    b.Navigation("Shoes");
                });

            modelBuilder.Entity("Clothespin2.Common.Clothes.Wearable", b =>
                {
                    b.HasOne("Clothespin2.Common.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerUsername");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Clothespin2.Common.Tracking.LogItem", b =>
                {
                    b.HasOne("Clothespin2.Common.Clothes.Items.Dress", "Dress")
                        .WithMany()
                        .HasForeignKey("DressID");

                    b.HasOne("Clothespin2.Common.Clothes.Outfit", "Outfit")
                        .WithMany()
                        .HasForeignKey("OutfitID");

                    b.HasOne("Clothespin2.Common.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerUsername");

                    b.HasOne("Clothespin2.Common.Clothes.Items.Pants", "Pants")
                        .WithMany()
                        .HasForeignKey("PantsID");

                    b.HasOne("Clothespin2.Common.Clothes.Items.Shirt", "Shirt")
                        .WithMany()
                        .HasForeignKey("ShirtID");

                    b.HasOne("Clothespin2.Common.Clothes.Items.Shoes", "Shoes")
                        .WithMany()
                        .HasForeignKey("ShoesID");

                    b.Navigation("Dress");

                    b.Navigation("Outfit");

                    b.Navigation("Owner");

                    b.Navigation("Pants");

                    b.Navigation("Shirt");

                    b.Navigation("Shoes");
                });

            modelBuilder.Entity("OuterwearOutfit", b =>
                {
                    b.HasOne("Clothespin2.Common.Clothes.Items.Outerwear", null)
                        .WithMany()
                        .HasForeignKey("OuterwearLayersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Clothespin2.Common.Clothes.Outfit", null)
                        .WithMany()
                        .HasForeignKey("OutfitsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Clothespin2.Common.Clothes.Items.Dress", b =>
                {
                    b.HasOne("Clothespin2.Common.Clothes.Wearable", null)
                        .WithOne()
                        .HasForeignKey("Clothespin2.Common.Clothes.Items.Dress", "ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Clothespin2.Common.Clothes.Items.Outerwear", b =>
                {
                    b.HasOne("Clothespin2.Common.Clothes.Wearable", null)
                        .WithOne()
                        .HasForeignKey("Clothespin2.Common.Clothes.Items.Outerwear", "ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Clothespin2.Common.Tracking.LogItem", null)
                        .WithMany("OuterwearLayers")
                        .HasForeignKey("LogItemID");
                });

            modelBuilder.Entity("Clothespin2.Common.Clothes.Items.Pants", b =>
                {
                    b.HasOne("Clothespin2.Common.Clothes.Wearable", null)
                        .WithOne()
                        .HasForeignKey("Clothespin2.Common.Clothes.Items.Pants", "ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Clothespin2.Common.Clothes.Items.Shirt", b =>
                {
                    b.HasOne("Clothespin2.Common.Clothes.Wearable", null)
                        .WithOne()
                        .HasForeignKey("Clothespin2.Common.Clothes.Items.Shirt", "ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Clothespin2.Common.Clothes.Items.Shoes", b =>
                {
                    b.HasOne("Clothespin2.Common.Clothes.Wearable", null)
                        .WithOne()
                        .HasForeignKey("Clothespin2.Common.Clothes.Items.Shoes", "ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Clothespin2.Common.Tracking.LogItem", b =>
                {
                    b.Navigation("OuterwearLayers");
                });

            modelBuilder.Entity("Clothespin2.Common.Clothes.Items.Dress", b =>
                {
                    b.Navigation("Outfits");
                });

            modelBuilder.Entity("Clothespin2.Common.Clothes.Items.Pants", b =>
                {
                    b.Navigation("Outfits");
                });

            modelBuilder.Entity("Clothespin2.Common.Clothes.Items.Shirt", b =>
                {
                    b.Navigation("Outfits");
                });

            modelBuilder.Entity("Clothespin2.Common.Clothes.Items.Shoes", b =>
                {
                    b.Navigation("Outfits");
                });
#pragma warning restore 612, 618
        }
    }
}
